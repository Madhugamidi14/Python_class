Q1. How do you load a CSV file into a Pandas DataFrame?

Ans : import pandas as pd

pd.read_csv("sample.csv")

Q2. How do you check the data type of a column in a Pandas DataFrame?

Ans: df.dtypes

Q3. How do you select rows from a Pandas DataFrame based on a condition?

Ans: import pandas as pd
  
data = {
  'Name': ['Ankit', 'Amit', 'Aishwarya', 'Priyanka', 'Priya', 'Shaurya' ],
  'Age': [21, 19, 20, 18, 17, 21],
  'Stream': ['Math', 'Commerce', 'Science', 'Math', 'Math', 'Science'],
  'Percentage': [88, 92, 95, 70, 65, 78]}

df = pd.DataFrame(data, columns = ['Name', 'Age', 'Stream', 'Percentage'])
  
print("Given Dataframe :\n", df) 

rslt_df = df.loc[df['Percentage'] > 80]
  
print('\nResult dataframe :\n', rslt_df)

Q4. How do you rename columns in a Pandas DataFrame?

Ans: import pandas as pd

rankings = {'test': ['India', 'South Africa', 'England',
                            'New Zealand', 'Australia'],
              'odi': ['England', 'India', 'New Zealand',
                            'South Africa', 'Pakistan'],
               't20': ['Pakistan', 'India', 'Australia',
                              'England', 'New Zealand']}

rankings_pd = pd.DataFrame(rankings)

print(rankings_pd.columns)
   
rankings_pd.rename(columns = {'test':'TEST', 'odi':'ODI',
                              't20':'T20'}, inplace = True)
   
print(rankings_pd.columns)

Q5. How do you drop columns in a Pandas DataFrame?

Ans: import pandas as pd

data = {
  "name": ["Sally", "Mary", "John"],
  "age": [50, 40, 30],
  "qualified": [True, False, False]
}

df = pd.DataFrame(data)

newdf = df.drop("age", axis='columns')

print(newdf)

Q6. How do you find the unique values in a column of a Pandas DataFrame?

Ans: import pandas as pd
  
data = {
    'A':['A1', 'A2', 'A3', 'A4', 'A5'], 
    'B':['B1', 'B2', 'B3', 'B4', 'B4']}

df = pd.DataFrame(data)

df.B.unique()

Q7. How do you find the number of missing values in each column of a Pandas DataFrame?

Ans: We can find the missing values by df.isna() method

Q8. How do you fill missing values in a Pandas DataFrame with a specific value?

Ans: We can fill the values by using df.fillna() method

Q9. How do you concatenate two Pandas DataFrames?

Ans: import pandas as pd
df1 = pd.DataFrame({'id': ['01', '02', '03', '04'],
                    'Name': ['Gamidi', 'Sree', 'Madhu', 'Chandra']})

df2 = pd.DataFrame({'id': ['05', '06', '07', '08'],
                    'Name': ['Gamidi', 'Naga', 'Sree', 'Harsha']})
  
  
frames = [df1, df2]
  
result = pd.concat(frames)
display(result)

Q10. How do you merge two Pandas DataFrames on a specific column?

Ans: import pandas as pd

df1 = pd.DataFrame({'Name':['Raju', 'Rani', 'Geeta', 'Sita', 'Sohit'],
                    'Marks':[80, 90, 75, 88, 59]})

df2 = pd.DataFrame({'Name':['Raju', 'Divya', 'Geeta', 'Sita'],
                    'Grade':['A', 'A', 'B', 'A'],
                    'Rank':[3, 1, 4, 2 ],
                    'Gender':['Male', 'Female', 'Female', 'Female']})

df1.merge(df2[['Grade', 'Name']], on = 'Name', how = 'left')

Q11. How do you group data in a Pandas DataFrame by a specific column and apply an aggregation function?

Ans: We can acheive this by following df.aggregate method  

Q12. How do you pivot a Pandas DataFrame?

Ans: import pandas as pd

df = pd.DataFrame({'A': ['John', 'Boby', 'Mina'],
      'B': ['Masters', 'Graduate', 'Graduate'],
      'C': [27, 23, 21]})

df.pivot('A', 'B', 'C')

Q13. How do you change the data type of a column in a Pandas DataFrame?

Ans: import pandas as pd

df = pd.DataFrame({
    'A': [1, 2, 3, 4, 5],
    'B': ['a', 'b', 'c', 'd', 'e'],
    'C': [1.1, '1.0', '1.3', 2, 5]})

df = df.astype(str)
print(df.dtypes)

Q14. How do you sort a Pandas DataFrame by a specific column?

Ans: We can acheive this by using df.sort_values() method

Ex: df.sort_values("Name")

Q15. How do you create a copy of a Pandas DataFrame?

Ans: import pandas as pd

data = {
  "name": ["Sally", "Mary", "John"],
  "qualified": [True, False, False]
}

df = pd.DataFrame(data)

newdf = df.copy()

print(newdf)

Q16. How do you filter rows of a Pandas DataFrame by multiple conditions?

Ans: import pandas as pd

dataFrame = pd.DataFrame({'Name': [' RACHEL  ', ' MONICA  ', ' PHOEBE  ',
                                   '  ROSS    ', 'CHANDLER', ' JOEY    '],
                           
                          'Age': [30, 35, 37, 33, 34, 30],
                           
                          'Salary': [100000, 93000, 88000, 120000, 94000, 95000],
                           
                          'JOB': ['DESIGNER', 'CHEF', 'MASUS', 'PALENTOLOGY',
                                  'IT', 'ARTIST']})

display(dataFrame.loc[(dataFrame['Salary']>=100000) & (dataFrame['Age']< 40) & (dataFrame['JOB'].str.startswith('D')),
                    ['Name','JOB']])

Q17. How do you calculate the mean of a column in a Pandas DataFrame?

Ans: import pandas as pd
technologies = {
    'Courses':["Spark","PySpark","Python","pandas",None],
    'Fee' :[20000,25000,22000,None,30000],
    'Duration':['30days','40days','35days','None','50days'],
    'Discount':[1000,2300,1200,2000,None]
              }
index_labels=['r1','r2','r3','r4','r5']
df = pd.DataFrame(technologies,index=index_labels)
df2 = df["Fee"].mean()
print(df2)

Q18. How do you calculate the standard deviation of a column in a Pandas DataFrame?

Ans: import pandas as pd
import numpy as np

d = {
    'Name':['Alisa','Bobby','Cathrine','Madonna','Rocky','Sebastian','Jaqluine',
   'Rahul','David','Andrew','Ajay','Teresa'],
   'Score1':[62,47,55,74,31,77,85,63,42,32,71,57],
   'Score2':[89,87,67,55,47,72,76,79,44,92,99,69],
   'Score3':[56,86,77,45,73,62,74,89,71,67,97,68]}

df = pd.DataFrame(d)
answer= df.std()
print(answer)

Q19. How do you calculate the correlation between two columns in a Pandas DataFrame?

Ans: import pandas as pd

data = pd.DataFrame({
    "column1": [12, 23, 45, 67],
    "column2": [67, 54, 32, 1],
    "column3": [34, 23, 56, 23]})

print(data.corr())

Q20. How do you select specific columns in a DataFrame using their labels?

Ans: We can acheive this by following the below method

Ex: df["Name"]


Q21. How do you select specific rows in a DataFrame using their indexes?

Ans: We can acheive this by following the iloc method

ex: df.iloc[1:5]

Q22. How do you sort a DataFrame by a specific column?

Ans: We can acheive this by using df.sort_values() method

Ex: df.sort_values("Name")

Q23. How do you create a new column in a DataFrame based on the values of another column?

Ans : import pandas as pd

df = pd.DataFrame({'Date':['10/2/2011', '11/2/2011', '12/2/2011', '13/2/2011'],
                    'Event':['Music', 'Poetry', 'Theatre', 'Comedy'],
                    'Cost':[10000, 5000, 15000, 2000]})

df['Discounted_Price'] = df['Cost'] - (0.1 * df['Cost'])
print(df)

Q24. How do you remove duplicates from a DataFrame?

Ans: import pandas as pd

data = {
  "name": ["Sally", "Mary", "John", "Mary"],
  "age": [50, 40, 30, 40],
  "qualified": [True, False, False, False]
}

df = pd.DataFrame(data)

newdf = df.drop_duplicates()

print(newdf)

Q25. What is the difference between .loc and .iloc in Pandas?

Ans: The main difference between pandas loc[] vs iloc[] is loc gets DataFrame rows & columns by labels/names and iloc[] gets by integer Index/position. 
For loc[], if the label is not present it gives a key error. For iloc[], if the position is not present it gives an index error.